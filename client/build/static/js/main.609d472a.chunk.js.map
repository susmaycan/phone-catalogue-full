{"version":3,"sources":["api/phone.js","actions/index.js","reducers/phoneReducer.js","reducers/index.js","utils/configureStore.js","components/Rating/index.js","components/Rating/Rating.js","components/Discount/index.js","components/Discount/Discount.js","components/Price/index.js","components/Price/Price.js","components/Table/index.js","components/Table/Table.js","components/Color/index.js","components/Color/Color.js","components/Image/index.js","components/Image/Image.js","components/Drawer/index.js","components/Drawer/Drawer.js","components/PhoneCard/PhoneCard.js","components/PhoneCard/index.js","components/PhoneList/index.js","components/PhoneList/PhoneList.js","components/Loading/index.js","components/Loading/Loading.js","components/Message/index.js","components/Message/Message.js","containers/App/App.js","containers/App/index.js","components/Navbar/index.js","components/Navbar/Navbar.js","components/Error/index.js","components/Error/Error.js","index.js"],"names":["endpoint_web","api","phones","read","id","axios","get","response","Promise","resolve","json","data","console","log","reject","fetchPhones","dispatch","type","then","status","payload","fetchPhonesError","catch","error","reducer","state","action","isLoading","combineReducers","phoneReducer","loggerMiddleware","createLogger","Rating","props","rating","Math","floor","random","ratings","i","this","push","key","className","renderRating","React","Component","Discount","value","Price","Table","title","elements","responsive","map","element","name","Color","color","Row","style","backgroundColor","Image","imageFileName","fluid","src","Drawer","phone","show","toggleDrawer","anchor","open","onClose","onClick","width","price","manufacturer","description","screen","ram","PhoneCard","preloadedState","useState","setShow","actionOpen","event","PhoneList","Container","Col","xs","md","lg","Loading","Spinner","animation","variant","Message","Alert","App","getPhones","phoneList","renderBody","connect","CustomNavbar","sticky","bg","expand","to","Toggle","aria-controls","Collapse","Nav","Form","inline","FormControl","placeholder","Button","Error","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","render","path","component","Navbar","exact","document","getElementById"],"mappings":"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","file":"static/js/main.609d472a.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst endpoint_local = 'http://localhost:3001/phones';\nconst endpoint_web = 'https://phone-catalogue-api.herokuapp.com/phones';\n\nconst api = {\n    phones: {\n        async read(id = null) {\n            try {\n                if (!id) {\n                    const response = await axios.get(endpoint_web);\n                    return Promise.resolve(response);\n                }\n                const response = await  axios.get(`${endpoint_web}/${id}`);\n                const data = await response.json();\n                return Promise.resolve(data);\n            } catch (error) {\n                console.log(\"Error retrieving the data from API\")\n                return Promise.reject(error);\n            }\n        }\n    },\n};\nexport default api;\n\n\n","import api from '../api/phone'\n\nexport const FETCH_REQUEST = 'FETCH_REQUEST'\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS'\nexport const FETCH_ERROR = 'FETCH_ERROR'\n\nexport function fetchPhones() {\n    return (dispatch) => {\n        dispatch(fetchPhonesRequest());\n        return api.phones.read()\n            .then(response => {\n                if (response.status === 200) {\n                    dispatch(fetchPhonesSuccess(response.data))\n                } else {\n                    dispatch(fetchPhonesError())\n                }\n            })\n            .catch(error => {\n                dispatch(fetchPhonesError())\n            })\n    }\n}\n\n\nfunction fetchPhonesRequest() {\n    return {\n        type: FETCH_REQUEST\n    }\n}\n\nfunction fetchPhonesSuccess(payload) {\n    return {\n        type: FETCH_SUCCESS,\n        payload\n    }\n}\n\nfunction fetchPhonesError() {\n    return {\n        type: FETCH_ERROR\n    }\n}","import {\n    FETCH_SUCCESS,\n    FETCH_REQUEST,\n    FETCH_ERROR\n} from '../actions'\n\nconst reducer = (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_REQUEST:\n            return {...state, isLoading: true};\n        case FETCH_SUCCESS:\n            return {...state, isLoading: false, phones: action.payload};\n        case FETCH_ERROR:\n            return {...state, isLoading: false, error:true};\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport phoneReducer from './phoneReducer'\n\nexport default combineReducers({\n    phoneReducer\n});","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from '../reducers'\n\nconst loggerMiddleware = createLogger()\n\nexport default function configureStore(preloadedState) {\n    return createStore(\n        rootReducer,\n        preloadedState,\n        applyMiddleware(thunkMiddleware, loggerMiddleware)\n    )\n}","import Rating from './Rating'\n\nexport default Rating","import React from 'react'\nimport './Rating.scss'\n\nclass Rating extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rating: Math.floor((Math.random() * 5) + 1)\n        }\n    }\n\n    renderRating() {\n        let ratings = []\n        for (let i = 0; i < this.state.rating; i++) {\n            ratings.push(<i key={i} className=\"fas fa-star\"></i>);\n        }\n        return ratings;\n    }\n    render() {\n        return (\n            <div className=\"rating--container\">\n               {this.renderRating()}\n            </div>\n        );\n    }\n}\nexport default Rating","import Discount from './Discount'\n\nexport default Discount","import React from 'react'\nimport './Discount.scss'\n\nclass Discount extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: Math.floor((Math.random() * 80) + 1)\n        }\n    }\n    render() {\n        return (\n            <span className=\"discount\">- {this.state.value} %</span>\n        );\n    }\n}\nexport default Discount","import Price from './Price'\n\nexport default Price","import React from 'react'\nimport './Price.scss'\nimport PropTypes from 'prop-types'\nimport Discount from '../Discount'\n\nconst Price = ({ value }) => (\n    <div className=\"price--container\">\n        <p>From <span className=\"price\">{value}.99 €</span><Discount /></p>\n    </div>\n)\nPrice.propTypes = {\n    value: PropTypes.number.isRequired,\n}\n\nexport default Price","import Table from './Table'\n\nexport default Table","import React from 'react'\nimport './Table.scss'\nimport PropTypes from 'prop-types'\nimport {\n    Table,\n} from 'react-bootstrap'\n\nconst SpecTable = ({ title, elements }) => (\n    <>\n        <h3 className=\"specs\">{title}</h3>\n        <Table responsive>\n            <tbody>\n                {elements.map(element => {\n                    return (\n                        <tr key={element.name}>\n                            <td className=\"row-bold\">{element.name}</td>\n                            <td>{element.value}</td>\n                        </tr>\n                    )})}\n            </tbody>\n        </Table>\n    </>\n)\n\nSpecTable.propTypes = {\n    title: PropTypes.string.isRequired,\n    elements: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        value: PropTypes.string.isRequired,\n    }).isRequired).isRequired\n}\n\nexport default SpecTable","import Color from './Color'\n\nexport default Color","import React from 'react'\nimport './Color.scss'\nimport PropTypes from 'prop-types'\nimport {\n    Row\n} from 'react-bootstrap'\n\nconst Color = ({ color }) => (\n    <div className=\"color--container\">\n        <Row className=\"justify-content-md-center\">\n            <p className=\"m-1\">Avariable in: </p>\n            <div className=\"square m-1\" style={{ backgroundColor: color }}></div>\n        </Row>\n    </div>\n);\n\nColor.propTypes = {\n    color: PropTypes.string.isRequired\n}\nexport default Color","import Image from './Image'\n\nexport default Image","import React from 'react'\nimport './Image.scss'\nimport PropTypes from 'prop-types'\nimport {\n    Image\n} from 'react-bootstrap'\n\nconst PhoneImage = ({ imageFileName }) => (\n    <div className=\"phone-image--container\">\n        <Image className=\"phone-image\" fluid src={`./images/${imageFileName}`} />\n    </div>\n);\n\nPhoneImage.propTypes = {\n    fileName: PropTypes.string.isRequired\n}\nexport default PhoneImage","import Drawer from './Drawer'\n\nexport default Drawer","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Drawer.scss'\nimport MaterialDrawer from '@material-ui/core/Drawer'\nimport Rating from '../Rating'\nimport Price from '../Price'\nimport Table from '../Table'\nimport Color from '../Color'\nimport Image from '../Image'\n\nconst Drawer = ({ phone, show, toggleDrawer }) => (\n    <MaterialDrawer anchor='right' open={show} onClose={toggleDrawer(false)}>\n        <div className=\"drawer-container\">\n            <div className=\"back-arrow-container\">\n                <span onClick={toggleDrawer(false)} className=\"back-arrow\">\n                    <i className=\"fas fa-arrow-left\"></i>\n                </span>\n            </div>\n            <h2 className=\"text-center phone-title\">{phone.name}</h2>\n            <Rating />\n            <hr width='50%' />\n            <Image imageFileName={phone.imageFileName} />\n            <Color color={phone.color} />\n            <Price value={phone.price} />\n            <Table\n                elements={[\n                    { name: 'Manufacturer', value: phone.manufacturer },\n                    { name: 'Description', value: phone.description },\n                    { name: 'Screen', value: phone.screen },\n                    { name: 'RAM', value: phone.ram + ' GB' },\n                ]}\n                title='Specifications'\n            />\n        </div>\n    </MaterialDrawer>\n)\nDrawer.propTypes = {\n    phone: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        manufacturer: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        imageFileName: PropTypes.string.isRequired,\n        screen: PropTypes.string.isRequired,\n        processor: PropTypes.string.isRequired,\n        ram: PropTypes.number.isRequired,\n    }).isRequired\n}\n\nexport default Drawer\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './PhoneCard.scss'\nimport CustomDrawer from '../Drawer'\nimport Rating from '../Rating'\nimport Price from '../Price'\nimport Image from '../Image'\n\nfunction PhoneCard(props) {\n\n    const phone = props.phone\n\n    const [show, setShow] = React.useState(false)\n\n    const toggleDrawer = (actionOpen) => event => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setShow(actionOpen);\n    };\n    return (\n        <div>\n            <div onClick={toggleDrawer(true)} className={`card-container ${show ? \"selected\" : \"arroz con cosas\"}`}>\n                <Image imageFileName={phone.imageFileName} />\n                <h2 className=\"text-center\">{phone.name}</h2>\n                <p>{phone.manufacturer}</p>\n                <Rating />\n                <Price value={phone.price} />\n            </div>\n            <CustomDrawer\n                phone={phone}\n                show={show}\n                toggleDrawer={toggleDrawer}\n            />\n        </div>\n    )\n}\n\nPhoneCard.propTypes = {\n    phone: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        manufacturer: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        imageFileName: PropTypes.string.isRequired,\n        screen: PropTypes.string.isRequired,\n        processor: PropTypes.string.isRequired,\n        ram: PropTypes.number.isRequired,\n    }).isRequired\n}\n\nexport default PhoneCard\n","import PhoneCard from './PhoneCard'\n\nexport default PhoneCard","import PhoneList from './PhoneList'\n\nexport default PhoneList","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PhoneCard from '../PhoneCard'\n\nimport {\n    Row,\n    Col,\n    Container\n} from \"react-bootstrap\";\n\nconst PhoneList = ({ phones }) => (\n    <Container>\n        <Row className=\"justify-content-md-center\">\n            {phones.map(phone =>\n                <Col key={phone.id} xs=\"12\" md=\"6\" lg=\"4\">\n                    <PhoneCard key={phone.id} phone={phone} />\n                </Col>\n            )} \n        </Row>\n    </Container>\n)\n\nPhoneList.propTypes = {\n    phones: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        manufacturer: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        imageFileName: PropTypes.string.isRequired,\n        screen: PropTypes.string.isRequired,\n        processor: PropTypes.string.isRequired,\n        ram: PropTypes.number.isRequired,\n    }).isRequired).isRequired\n}\n\nexport default PhoneList\n","import Loading from './Loading'\n\nexport default Loading","import React from 'react'\nimport './Loading.scss'\nimport {\n    Spinner\n} from \"react-bootstrap\"\n\nclass Loading extends React.Component {\n    render() {\n        return (\n           <div className=\"body-container\">\n                  <Spinner animation=\"grow\" variant=\"dark\" /><span> Loading...</span>\n           </div>\n        );\n    }\n}\nexport default Loading","import Message from './Message'\n\nexport default Message","import React from 'react'\nimport './Message.scss'\nimport {\n    Alert\n} from \"react-bootstrap\"\n\nclass Loading extends React.Component {\n    render() {\n        return (\n           <div className=\"body-container\">\n                <Alert variant=\"danger\">Sorry there was an error processing your request.</Alert>\n           </div>\n        );\n    }\n}\nexport default Loading","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    fetchPhones\n} from '../../actions'\nimport PhoneList from \"../../components/PhoneList\"\nimport Loading from '../../components/Loading'\nimport Message from '../../components/Message'\n\nconst mapStateToProps = state => ({\n    phoneList: state.phoneReducer.phones || [],\n    isLoading: state.phoneReducer.isLoading,\n    error: state.phoneReducer.error\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getPhones: () => dispatch(fetchPhones())\n})\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.getPhones()\n    }\n\n    renderBody() {\n        if (this.props.isLoading) {\n            return (\n                <Loading />\n            )\n        } else if (this.props.error) {\n            return (\n                <Message />\n            )\n        } else {\n            return (\n                <PhoneList phones={this.props.phoneList} />\n            )\n        }\n    }\n    render() {\n        return (\n            <div className=\"app-body\">\n                {this.renderBody()}\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import App from './App'\n\nexport default App","import CustomNavbar from './Navbar'\n\nexport default CustomNavbar","import React from 'react'\nimport './Navbar.scss'\nimport {\n    FormControl,\n    Nav,\n    Navbar,\n    Button,\n    Form\n} from \"react-bootstrap\"\nimport { Link } from 'react-router-dom'\n\nclass CustomNavbar extends React.Component {\n    render() {\n        return (\n            <Navbar className=\"navigation-bar\" sticky=\"top\" bg=\"dark\" expand=\"lg\" variant=\"dark\">\n                <Link className=\"brand-link\" to=\"/\"><i className=\"fas fa-mobile-alt\"></i> Phone-shop</Link>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"ml-auto align-items-center\">\n                        <Form inline>\n                            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                            <Button variant=\"outline-light\"><i className=\"fas fa-search\"></i> Search</Button>\n                        </Form>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\nexport default CustomNavbar","import Error from './Error'\n\nexport default Error","import React from 'react'\nimport {\n    Alert\n} from \"react-bootstrap\"\n\nclass Error extends React.Component {\n    render() {\n        return (\n           <div className=\"body-container\">\n                <Alert variant=\"danger\"><b>Error 404</b> This route couldn't be found. <i className=\"far fa-frown-open\"></i></Alert>\n           </div>\n        );\n    }\n}\nexport default Error","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux'\nimport { render } from 'react-dom'\nimport configureStore from './utils/configureStore'\nimport App from './containers/App'\nimport Navbar from './components/Navbar'\nimport Error from './components/Error'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport './styles/index.scss'\n\nconst store = configureStore()\n\nrender(\n    <Provider store={store}>\n        <BrowserRouter>\n            <Route path=\"/\" component={Navbar} />\n            <Switch>\n                <Route exact path=\"/\" component={App} />\n                <Route component={Error} />\n            </Switch>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}