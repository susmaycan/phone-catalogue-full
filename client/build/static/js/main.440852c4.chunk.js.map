{"version":3,"sources":["api/phone.js","actions/index.js","reducers/phoneReducer.js","reducers/index.js","utils/configureStore.js","components/Rating/index.js","components/Rating/Rating.js","components/Discount/index.js","components/Discount/Discount.js","components/Price/index.js","components/Price/Price.js","components/Table/index.js","components/Table/Table.js","components/Color/index.js","components/Color/Color.js","components/Image/index.js","components/Image/Image.js","components/BackArrow/index.js","components/BackArrow/BackArrow.js","components/Drawer/index.js","components/Drawer/Drawer.js","components/PhoneCard/PhoneCard.js","components/PhoneCard/index.js","components/PhoneList/index.js","components/PhoneList/PhoneList.js","components/Loading/index.js","components/Loading/Loading.js","components/Message/index.js","components/Message/Message.js","components/Layout/index.js","components/Layout/Layout.js","containers/Layout/index.js","containers/Layout/Layout.js","components/Search/index.js","components/Search/Search.js","containers/Search/index.js","containers/Search/Search.js","components/Navbar/index.js","components/Navbar/Navbar.js","components/Error/index.js","components/Error/Error.js","index.js"],"names":["endpoint_web","api","phones","read","id","axios","get","response","Promise","resolve","json","data","console","log","reject","fetchPhones","dispatch","type","then","status","payload","fetchPhonesError","catch","error","setFilterSearch","text","setFilter","reducer","state","action","isLoading","searchTerm","combineReducers","phoneReducer","filterReducer","loggerMiddleware","createLogger","Rating","props","rating","Math","floor","random","ratings","i","this","push","key","className","renderRating","React","Component","Discount","value","Price","Table","title","elements","responsive","map","element","name","Color","color","Row","style","backgroundColor","Image","imageFileName","fluid","src","BackArrow","toggleDrawer","onClick","Drawer","phone","show","anchor","open","onClose","width","price","manufacturer","description","screen","ram","PhoneCard","preloadedState","useState","setShow","actionOpen","event","PhoneList","Container","Col","xs","md","lg","Loading","Spinner","animation","variant","Message","Alert","children","phoneList","getPhones","nextProps","setState","filter","toUpperCase","includes","length","renderBody","connect","Layout","Search","Form","inline","FormControl","disabled","onChange","target","placeholder","SearchComponent","CustomNavbar","sticky","bg","expand","to","Toggle","aria-controls","Collapse","Nav","Error","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","render","path","component","Navbar","exact","document","getElementById"],"mappings":"ohBAGMA,EAAe,mDAoBNC,EAlBH,CACRC,OAAQ,CACEC,KADF,WACmB,IAAZC,EAAW,uDAAN,KAAM,iIAETA,EAFS,gCAGaC,IAAMC,IAAIN,GAHvB,cAGJO,EAHI,yBAIHC,QAAQC,QAAQF,IAJb,uBAMUF,IAAMC,IAAN,UAAaN,EAAb,YAA6BI,IANvC,cAMRG,EANQ,iBAOKA,EAASG,OAPd,eAORC,EAPQ,yBAQPH,QAAQC,QAAQE,IART,yCAUdC,QAAQC,IAAI,sCAVE,kBAWPL,QAAQM,OAAR,OAXO,+DCAvB,SAASC,IACZ,OAAO,SAACC,GAEJ,OADAA,EAsBG,CACHC,KA9BqB,kBAQdhB,EAAIC,OAAOC,OACbe,MAAK,SAAAX,GACsB,MAApBA,EAASY,OACTH,EAwBT,CACHC,KAnCqB,gBAoCrBG,QA1BwCb,EAASI,OAErCK,EAASK,QAGhBC,OAAM,SAAAC,GACHP,EAASK,SAKlB,SAASG,EAAgBC,GAC5B,OAAO,SAACT,GACJA,EAuBR,SAAmBS,GACf,MAAO,CACHR,KA9CkB,aA+ClBQ,QA1BSC,CAAUD,KAiB3B,SAASJ,IACL,MAAO,CACHJ,KAzCmB,eCG3B,IAeeU,EAfC,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACpC,OAAQA,EAAOZ,MACX,IDPqB,gBCQjB,OAAO,eAAIW,EAAX,CAAkBE,WAAW,EAAM5B,OAAQ,GAAI6B,WAAY,KAC/D,IDRqB,gBCSjB,OAAO,eAAIH,EAAX,CAAkBE,WAAW,EAAO5B,OAAQ2B,EAAOT,QAASW,WAAY,KAC5E,IDTmB,cCUf,OAAO,eAAIH,EAAX,CAAkBE,WAAW,EAAOP,OAAM,IAC9C,IDVkB,aCWd,OAAO,eAAIK,EAAX,CAAkBG,WAAYF,EAAOJ,OACzC,QACI,OAAOG,ICdJI,cAAgB,CAC3BC,eACAC,kBCDEC,EAAmBC,yB,2ECHVC,G,mBCGX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDV,MAAQ,CACTW,OAAQC,KAAKC,MAAuB,EAAhBD,KAAKE,SAAgB,IAH9B,E,4EASf,IADA,IAAIC,EAAU,GACLC,EAAI,EAAGA,EAAIC,KAAKjB,MAAMW,OAAQK,IACnCD,EAAQG,KAAK,uBAAGC,IAAKH,EAAGI,UAAU,iBAEtC,OAAOL,I,+BAGP,OACI,yBAAKK,UAAU,oBACXH,KAAKI,oB,GAnBAC,IAAMC,YCDZC,G,0BCGX,WAAYd,GAAQ,IAAD,8BACf,4CAAMA,KACDV,MAAQ,CACTyB,MAAOb,KAAKC,MAAuB,GAAhBD,KAAKE,SAAiB,IAH9B,E,sEAOf,OACI,0BAAMM,UAAU,YAAhB,KAA8BH,KAAKjB,MAAMyB,MAAzC,U,GAVWH,IAAMC,YCDdG,ECGD,SAAC,GAAD,IAAGD,EAAH,EAAGA,MAAH,OACV,yBAAKL,UAAU,mBACX,mCAAQ,0BAAMA,UAAU,SAASK,EAAzB,cAA2C,kBAAC,EAAD,S,kBCL5CE,ECKG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACI,4BAAKD,GACL,kBAAC,IAAD,CAAOE,YAAU,GACb,+BACKD,EAASE,KAAI,SAAAC,GACV,OACI,wBAAIb,IAAKa,EAAQC,MACb,wBAAIb,UAAU,YAAYY,EAAQC,MAClC,4BAAKD,EAAQP,e,kBCd1BS,ECKD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACV,yBAAKf,UAAU,mBACX,kBAACgB,EAAA,EAAD,CAAKhB,UAAU,0BACX,uBAAGA,UAAU,OAAb,kBACA,yBAAKA,UAAU,aAAaiB,MAAO,CAAEC,gBAAiBH,Q,kBCTnDI,ECKI,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAH,OACf,yBAAKpB,UAAU,mBACX,kBAAC,IAAD,CAAOA,UAAU,cAAcqB,OAAK,EAACC,IAAG,mBAAcF,OCP/CG,G,OCEG,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACd,yBAAKxB,UAAU,wBACX,0BAAMyB,QAASD,GAAa,GAAQxB,UAAU,cAC1C,uBAAGA,UAAU,0BCLV0B,ECUA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMJ,EAAhB,EAAgBA,aAAhB,OACX,kBAAC,IAAD,CAAgBK,OAAO,QAAQC,KAAMF,EAAMG,QAASP,GAAa,IAC7D,yBAAKxB,UAAU,oBACX,kBAAC,EAAD,CACIwB,aAAcA,IAElB,wBAAIxB,UAAU,2BAA2B2B,EAAMd,MAC/C,kBAAC,EAAD,MACA,wBAAImB,MAAM,QACV,kBAAC,EAAD,CAAOZ,cAAeO,EAAMP,gBAC5B,kBAAC,EAAD,CAAOL,MAAOY,EAAMZ,QACpB,kBAAC,EAAD,CAAOV,MAAOsB,EAAMM,QACpB,kBAAC,EAAD,CACIxB,SAAU,CACN,CAAEI,KAAM,eAAgBR,MAAOsB,EAAMO,cACrC,CAAErB,KAAM,cAAeR,MAAOsB,EAAMQ,aACpC,CAAEtB,KAAM,SAAUR,MAAOsB,EAAMS,QAC/B,CAAEvB,KAAM,MAAOR,MAAOsB,EAAMU,IAAM,QAEtC7B,MAAM,sBCuBP8B,IjB/CwBC,EkBLxBD,EDMf,SAAmBhD,GAEf,IAAMqC,EAAQrC,EAAMqC,MAFE,EAIEzB,IAAMsC,UAAS,GAJjB,mBAIfZ,EAJe,KAITa,EAJS,KAMhBjB,EAAe,SAACkB,GAAD,OAAgB,SAAAC,IACd,YAAfA,EAAM1E,MAAqC,QAAd0E,EAAM5C,KAA+B,UAAd4C,EAAM5C,MAI9D0C,EAAQC,KAEZ,OACI,6BACI,yBAAKjB,QAASD,GAAa,GAAOxB,UAAS,yBAAoB4B,EAAO,WAAa,oBAC/E,kBAAC,EAAD,CAAOR,cAAeO,EAAMP,gBAC5B,wBAAIpB,UAAU,eAAe2B,EAAMd,MACnC,2BAAIc,EAAMO,cACV,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAO7B,MAAOsB,EAAMM,SAExB,kBAAC,EAAD,CACIN,MAAOA,EACPC,KAAMA,EACNJ,aAAcA,M,iBE/BfoB,ECQG,SAAC,GAAD,IAAG1F,EAAH,EAAGA,OAAH,OACd,kBAAC2F,EAAA,EAAD,KACI,kBAAC7B,EAAA,EAAD,CAAKhB,UAAU,6BACV9C,EAAOyD,KAAI,SAAAgB,GAAK,OACb,kBAACmB,EAAA,EAAD,CAAK/C,IAAK4B,EAAMvE,GAAI2F,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAClC,kBAAC,EAAD,CAAWlD,IAAK4B,EAAMvE,GAAIuE,MAAOA,W,SCbtCuB,E,iLCKP,OACG,yBAAKlD,UAAU,2BACR,kBAACmD,EAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,SAAS,kD,GAJvCnD,IAAMC,W,kBCHbmD,E,iLCMP,OACI,yBAAKtD,UAAU,2BACX,kBAACuD,EAAA,EAAD,CAAOF,QAAQ,UAAUxD,KAAKP,MAAMkE,e,GAJ9BtD,IAAMC,WCJbyC,E,YCKX,WAAYtD,GAAQ,IAAD,8BACf,4CAAMA,KACDV,MAAQ,CACT6E,UAAW,EAAKnE,MAAMpC,QAHX,E,iFAQf2C,KAAKP,MAAMoE,c,gDAGWC,GACtB9D,KAAK+D,SAAS,CACVH,UAAWE,EAAUzG,OAAO2G,QAAO,SAAAlC,GAC/B,OAAQA,EAAMO,aAAa4B,cAAgB,IAAMnC,EAAMd,KAAKiD,eAAeC,SAASJ,EAAUlF,KAAKqF,sB,mCAM3G,OAAIjE,KAAKP,MAAMR,UAEP,kBAAC,EAAD,MAEGe,KAAKP,MAAMf,MAEd,kBAAC,EAAD,0CAA2C,qDAA3C,6CAGgC,IAAhCsB,KAAKjB,MAAM6E,UAAUO,OAEjB,kBAAC,EAAD,kBAAmB,iDAAnB,6EAIA,kBAAC,EAAD,CAAW9G,OAAQ2C,KAAKjB,MAAM6E,c,+BAO1C,OACI,yBAAKzD,UAAU,kBACVH,KAAKoE,kB,GA9CD9D,aCHNyC,ECeAsB,aAXS,SAAAtF,GAAK,MAAK,CAC9B1B,OAAQ0B,EAAMK,aAAa/B,QAAU,GACrC4B,UAAWF,EAAMK,aAAaH,UAC9BP,MAAOK,EAAMK,aAAaV,MAC1BE,KAAMG,EAAMM,cAAcH,eAGH,SAACf,GAAD,MAAe,CACtC0F,UAAW,kBAAM1F,EAASD,SAGfmG,CAA6CC,G,wDCf7CC,GCKA,SAAC,GAAD,IAAG1F,EAAH,EAAGA,UAAWH,EAAd,EAAcA,MAAd,OACX,kBAAC8F,GAAA,EAAD,CAAMC,QAAM,GACR,kBAACC,GAAA,EAAD,CAAaC,SAAUjG,EAAOkG,SAAU,SAAA9B,GAAK,OAAIjE,EAAUiE,EAAM+B,OAAOrE,QAAQpC,KAAK,OAAO0G,YAAY,YAAY3E,UAAU,cCPvHoE,GCYAF,aAJS,SAAAtF,GAAK,MAAK,CAC9BL,MAAOK,EAAMK,aAAaV,UALH,SAACP,GAAD,MAAe,CACtCU,UAAW,SAAAD,GAAI,OAAIT,EAASQ,EAAgBC,QAOjCyF,CAGZU,ICfYC,G,iLCSP,OACI,kBAAC,IAAD,CAAQ7E,UAAU,iBAAiB8E,OAAO,MAAMC,GAAG,OAAOC,OAAO,KAAK3B,QAAQ,QAC1E,kBAAC,KAAD,CAAMrD,UAAU,aAAaiF,GAAG,KAAI,uBAAGjF,UAAU,sBAAjD,eACA,kBAAC,IAAOkF,OAAR,CAAeC,gBAAc,qBAC7B,kBAAC,IAAOC,SAAR,CAAiBhI,GAAG,oBAChB,kBAACiI,GAAA,EAAD,CAAKrF,UAAU,8BACZ,kBAAC,GAAD,a,GARIE,IAAMC,WCPlBmF,I,wLCOP,OACI,yBAAKtF,UAAU,2BACX,qCAAU,0BAAMA,UAAU,cAAhB,QACV,2FAAgE,gCAAQ,kBAAC,KAAD,CAAMiF,GAAG,KAAT,mB,GANpE/E,IAAMC,Y,SCKpBoF,I,OrCHKC,YACHC,EACAlD,EACAmD,YAAgBC,IAAiBxG,KqCEzCyG,iBACI,kBAAC,IAAD,CAAUL,MAAOA,IACb,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOM,KAAK,IAAIC,UAAWC,KAC3B,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOC,OAAK,EAACH,KAAK,IAAIC,UAAW3B,IACjC,kBAAC,KAAD,CAAO2B,UAAWR,QAI9BW,SAASC,eAAe,U","file":"static/js/main.440852c4.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst endpoint_local = 'http://localhost:3001/phones';\nconst endpoint_web = 'https://phone-catalogue-api.herokuapp.com/phones';\n\nconst api = {\n    phones: {\n        async read(id = null) {\n            try {\n                if (!id) {\n                    const response = await axios.get(endpoint_web);\n                    return Promise.resolve(response);\n                }\n                const response = await  axios.get(`${endpoint_web}/${id}`);\n                const data = await response.json();\n                return Promise.resolve(data);\n            } catch (error) {\n                console.log(\"Error retrieving the data from API\")\n                return Promise.reject(error);\n            }\n        }\n    },\n};\nexport default api;\n\n\n","import api from '../api/phone'\n\nexport const FETCH_REQUEST = 'FETCH_REQUEST'\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS'\nexport const FETCH_ERROR = 'FETCH_ERROR'\nexport const SET_FILTER = 'SET_FILTER'\n\nexport function fetchPhones() {\n    return (dispatch) => {\n        dispatch(fetchPhonesRequest());\n        return api.phones.read()\n            .then(response => {\n                if (response.status === 200) {\n                    dispatch(fetchPhonesSuccess(response.data))\n                } else {\n                    dispatch(fetchPhonesError())\n                }\n            })\n            .catch(error => {\n                dispatch(fetchPhonesError())\n            })\n    }\n}\n\nexport function setFilterSearch(text) {\n    return (dispatch) => {\n        dispatch(setFilter(text));\n    }\n}\n\nfunction fetchPhonesRequest() {\n    return {\n        type: FETCH_REQUEST\n    }\n}\n\nfunction fetchPhonesSuccess(payload) {\n    return {\n        type: FETCH_SUCCESS,\n        payload\n    }\n}\n\nfunction fetchPhonesError() {\n    return {\n        type: FETCH_ERROR\n    }\n}\n\nfunction setFilter(text) {\n    return {\n        type: SET_FILTER,\n        text\n    }\n}","import {\n    FETCH_SUCCESS,\n    FETCH_REQUEST,\n    FETCH_ERROR,\n    SET_FILTER\n} from '../actions'\n\nconst reducer = (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_REQUEST:\n            return {...state, isLoading: true, phones: [], searchTerm: ''};\n        case FETCH_SUCCESS:\n            return {...state, isLoading: false, phones: action.payload, searchTerm: ''};\n        case FETCH_ERROR:\n            return {...state, isLoading: false, error:true};\n        case SET_FILTER:\n            return {...state, searchTerm: action.text};\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport phoneReducer from './phoneReducer'\nimport filterReducer from './phoneReducer'\n\nexport default combineReducers({\n    phoneReducer,\n    filterReducer\n});","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from '../reducers'\n\nconst loggerMiddleware = createLogger()\n\nexport default function configureStore(preloadedState) {\n    return createStore(\n        rootReducer,\n        preloadedState,\n        applyMiddleware(thunkMiddleware, loggerMiddleware)\n    )\n}","import Rating from './Rating'\n\nexport default Rating","import React from 'react'\nimport './Rating.scss'\n\nclass Rating extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rating: Math.floor((Math.random() * 5) + 1)\n        }\n    }\n\n    renderRating() {\n        let ratings = []\n        for (let i = 0; i < this.state.rating; i++) {\n            ratings.push(<i key={i} className=\"fas fa-star\"></i>);\n        }\n        return ratings;\n    }\n    render() {\n        return (\n            <div className=\"container-rating\">\n               {this.renderRating()}\n            </div>\n        );\n    }\n}\nexport default Rating","import Discount from './Discount'\n\nexport default Discount","import React from 'react'\nimport './Discount.scss'\n\nclass Discount extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: Math.floor((Math.random() * 80) + 1)\n        }\n    }\n    render() {\n        return (\n            <span className=\"discount\">- {this.state.value} %</span>\n        );\n    }\n}\nexport default Discount","import Price from './Price'\n\nexport default Price","import React from 'react'\nimport './Price.scss'\nimport PropTypes from 'prop-types'\nimport Discount from '../Discount'\n\nconst Price = ({ value }) => (\n    <div className=\"container-price\">\n        <p>From <span className=\"price\">{value}.99 €</span><Discount /></p>\n    </div>\n)\nPrice.propTypes = {\n    value: PropTypes.number.isRequired,\n}\n\nexport default Price","import Table from './Table'\n\nexport default Table","import React from 'react'\nimport './Table.scss'\nimport PropTypes from 'prop-types'\nimport {\n    Table,\n} from 'react-bootstrap'\n\nconst SpecTable = ({ title, elements }) => (\n    <>\n        <h3>{title}</h3>\n        <Table responsive>\n            <tbody>\n                {elements.map(element => {\n                    return (\n                        <tr key={element.name}>\n                            <td className=\"row-bold\">{element.name}</td>\n                            <td>{element.value}</td>\n                        </tr>\n                    )})}\n            </tbody>\n        </Table>\n    </>\n)\n\nSpecTable.propTypes = {\n    title: PropTypes.string.isRequired,\n    elements: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        value: PropTypes.string.isRequired,\n    }).isRequired).isRequired\n}\n\nexport default SpecTable","import Color from './Color'\n\nexport default Color","import React from 'react'\nimport './Color.scss'\nimport PropTypes from 'prop-types'\nimport {\n    Row\n} from 'react-bootstrap'\n\nconst Color = ({ color }) => (\n    <div className=\"container-color\">\n        <Row className=\"justify-content-center\">\n            <p className=\"m-1\">Avariable in: </p>\n            <div className=\"square m-1\" style={{ backgroundColor: color }}></div>\n        </Row>\n    </div>\n);\n\nColor.propTypes = {\n    color: PropTypes.string.isRequired\n}\nexport default Color","import Image from './Image'\n\nexport default Image","import React from 'react'\nimport './Image.scss'\nimport PropTypes from 'prop-types'\nimport {\n    Image\n} from 'react-bootstrap'\n\nconst PhoneImage = ({ imageFileName }) => (\n    <div className=\"container-image\">\n        <Image className=\"phone-image\" fluid src={`./images/${imageFileName}`} />\n    </div>\n);\n\nPhoneImage.propTypes = {\n    imageFileName: PropTypes.string.isRequired\n}\nexport default PhoneImage","import BackArrow from './BackArrow'\n\nexport default BackArrow","import React from 'react'\nimport './BackArrow.scss'\nimport PropTypes from 'prop-types'\n\nconst BackArrow = ({ toggleDrawer }) => (\n    <div className=\"container-back-arrow\">\n        <span onClick={toggleDrawer(false)} className=\"back-arrow\">\n            <i className=\"fas fa-arrow-left\"></i>\n        </span>\n    </div>\n);\n\nBackArrow.propTypes = {\n    toggleDrawer: PropTypes.func.isRequired\n}\nexport default BackArrow","import Drawer from './Drawer'\n\nexport default Drawer","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Drawer.scss'\nimport MaterialDrawer from '@material-ui/core/Drawer'\nimport Rating from '../Rating'\nimport Price from '../Price'\nimport Table from '../Table'\nimport Color from '../Color'\nimport Image from '../Image'\nimport BackArrow from '../BackArrow'\n\n\nconst Drawer = ({ phone, show, toggleDrawer }) => (\n    <MaterialDrawer anchor='right' open={show} onClose={toggleDrawer(false)}>\n        <div className=\"container-drawer\">\n            <BackArrow \n                toggleDrawer={toggleDrawer}\n            />\n            <h2 className=\"text-center phone-title\">{phone.name}</h2>\n            <Rating />\n            <hr width='50%' />\n            <Image imageFileName={phone.imageFileName} />\n            <Color color={phone.color} />\n            <Price value={phone.price} />\n            <Table\n                elements={[\n                    { name: 'Manufacturer', value: phone.manufacturer },\n                    { name: 'Description', value: phone.description },\n                    { name: 'Screen', value: phone.screen },\n                    { name: 'RAM', value: phone.ram + ' GB' },\n                ]}\n                title='Specifications'\n            />\n        </div>\n    </MaterialDrawer>\n)\nDrawer.propTypes = {\n    phone: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        manufacturer: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        imageFileName: PropTypes.string.isRequired,\n        screen: PropTypes.string.isRequired,\n        processor: PropTypes.string.isRequired,\n        ram: PropTypes.number.isRequired,\n    }).isRequired\n}\n\nexport default Drawer\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './PhoneCard.scss'\nimport CustomDrawer from '../Drawer'\nimport Rating from '../Rating'\nimport Price from '../Price'\nimport Image from '../Image'\n\nfunction PhoneCard(props) {\n\n    const phone = props.phone\n\n    const [show, setShow] = React.useState(false)\n\n    const toggleDrawer = (actionOpen) => event => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setShow(actionOpen);\n    };\n    return (\n        <div>\n            <div onClick={toggleDrawer(true)} className={`card-container ${show ? \"selected\" : \"arroz con cosas\"}`}>\n                <Image imageFileName={phone.imageFileName} />\n                <h2 className=\"text-center\">{phone.name}</h2>\n                <p>{phone.manufacturer}</p>\n                <Rating />\n                <Price value={phone.price} />\n            </div>\n            <CustomDrawer\n                phone={phone}\n                show={show}\n                toggleDrawer={toggleDrawer}\n            />\n        </div>\n    )\n}\n\nPhoneCard.propTypes = {\n    phone: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        manufacturer: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        imageFileName: PropTypes.string.isRequired,\n        screen: PropTypes.string.isRequired,\n        processor: PropTypes.string.isRequired,\n        ram: PropTypes.number.isRequired,\n    }).isRequired\n}\n\nexport default PhoneCard\n","import PhoneCard from './PhoneCard'\n\nexport default PhoneCard","import PhoneList from './PhoneList'\n\nexport default PhoneList","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PhoneCard from '../PhoneCard'\n\nimport {\n    Row,\n    Col,\n    Container\n} from \"react-bootstrap\";\n\nconst PhoneList = ({ phones }) => (\n    <Container>\n        <Row className=\"justify-content-md-center\">\n            {phones.map(phone =>\n                <Col key={phone.id} xs=\"12\" md=\"6\" lg=\"4\">\n                    <PhoneCard key={phone.id} phone={phone} />\n                </Col>\n            )} \n        </Row>\n    </Container>\n)\n\nPhoneList.propTypes = {\n    phones: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        manufacturer: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        imageFileName: PropTypes.string.isRequired,\n        screen: PropTypes.string.isRequired,\n        processor: PropTypes.string.isRequired,\n        ram: PropTypes.number.isRequired,\n    }).isRequired).isRequired\n}\n\nexport default PhoneList\n","import Loading from './Loading'\n\nexport default Loading","import React from 'react'\nimport {\n    Spinner\n} from \"react-bootstrap\"\n\nclass Loading extends React.Component {\n    render() {\n        return (\n           <div className=\"block container-message\">\n                  <Spinner animation=\"grow\" variant=\"dark\" /><span> Loading...</span>\n           </div>\n        );\n    }\n}\nexport default Loading","import Message from './Message'\n\nexport default Message","import React from 'react'\nimport './Message.scss'\nimport {\n    Alert\n} from \"react-bootstrap\"\n\nclass Message extends React.Component {\n    render() {\n        return (\n            <div className=\"block container-message\">\n                <Alert variant=\"danger\">{this.props.children}</Alert>\n            </div>\n        );\n    }\n}\nexport default Message","import PhoneList from './Layout'\n\nexport default PhoneList","import React, { Component } from 'react'\nimport PhoneList from \"../../components/PhoneList\"\nimport Loading from '../../components/Loading'\nimport Message from '../../components/Message'\n\nclass Layout extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            phoneList: this.props.phones\n        }\n    }\n\n    componentDidMount() {\n        this.props.getPhones()\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            phoneList: nextProps.phones.filter(phone => {\n                return (phone.manufacturer.toUpperCase() + ' ' + phone.name.toUpperCase()).includes(nextProps.text.toUpperCase())\n            })\n        })\n    }\n\n    renderBody() {\n        if (this.props.isLoading) {\n            return (\n                <Loading />\n            )\n        } else if (this.props.error) {\n            return (\n                <Message>Sorry, there was a problem and we <strong>couldn't retrieve</strong> the phone list. Please, try again later.</Message>\n            )\n        } else {\n            if (this.state.phoneList.length === 0) {\n                return (\n                    <Message>Sorry, we <strong>couldn't find</strong> phones that matches your query. Please, try again using different words.</Message>\n                )\n            } else {\n                return (\n                    <PhoneList phones={this.state.phoneList} />\n                )\n            }\n\n        }\n    }\n    render() {\n        return (\n            <div className=\"block app-body\">\n                {this.renderBody()}\n            </div>\n        )\n    }\n}\n\nexport default Layout","import PhoneList from './Layout'\n\nexport default PhoneList","import { connect } from 'react-redux'\nimport {\n    fetchPhones\n} from '../../actions'\nimport Layout from \"../../components/Layout\"\n\nconst mapStateToProps = state => ({\n    phones: state.phoneReducer.phones || [],\n    isLoading: state.phoneReducer.isLoading,\n    error: state.phoneReducer.error,\n    text: state.filterReducer.searchTerm\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getPhones: () => dispatch(fetchPhones())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);","import Search from './Search'\n\nexport default Search","import React from 'react'\nimport {\n    Form,\n    FormControl\n} from 'react-bootstrap'\nimport PropTypes from 'prop-types'\n\nconst Search = ({ setFilter, error }) => (\n    <Form inline>\n        <FormControl disabled={error} onChange={event => setFilter(event.target.value)} type=\"text\" placeholder=\"Search...\" className=\"mr-sm-2\" />\n    </Form>\n)\n\nSearch.propTypes = {\n    setFilter: PropTypes.func.isRequired,\n}\n\nexport default Search","import Search from './Search'\n\nexport default Search","import { connect } from 'react-redux'\nimport {\n    setFilterSearch\n} from '../../actions'\nimport SearchComponent from '../../components/Search'\n\nconst mapDispatchToProps = (dispatch) => ({\n    setFilter: text => dispatch(setFilterSearch(text))\n})\n\nconst mapStateToProps = state => ({\n    error: state.phoneReducer.error,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n) (SearchComponent)","import CustomNavbar from './Navbar'\n\nexport default CustomNavbar","import React from 'react'\nimport './Navbar.scss'\nimport {\n    Nav,\n    Navbar,\n} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Search from '../../containers/Search'\n\nclass CustomNavbar extends React.Component {\n    render() {\n        return (\n            <Navbar className=\"navigation-bar\" sticky=\"top\" bg=\"dark\" expand=\"lg\" variant=\"dark\">\n                <Link className=\"brand-link\" to=\"/\"><i className=\"fas fa-mobile-alt\"></i> Phone-shop</Link>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"ml-auto align-items-center\">\n                       <Search />\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\nexport default CustomNavbar","import Error from './Error'\n\nexport default Error","import React from 'react'\nimport './Error.scss'\nimport {\n    Link\n} from 'react-router-dom'\n\nclass Error extends React.Component {\n\n    render() {\n        return (\n            <div className=\"block container-message\">\n                <h1>Error <span className=\"code-error\">404</span></h1>\n                <p>Oops! Whatever you were looking for... it's not here. Please <strong><Link to='/'>Go home!</Link></strong></p>\n            </div>\n        );\n    }\n}\nexport default Error","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux'\nimport { render } from 'react-dom'\nimport configureStore from './utils/configureStore'\nimport Layout from './containers/Layout'\nimport Navbar from './components/Navbar'\nimport Error from './components/Error'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport './styles/index.scss'\n\nconst store = configureStore()\n\nrender(\n    <Provider store={store}>\n        <BrowserRouter>\n            <Route path=\"/\" component={Navbar} />\n            <Switch>\n                <Route exact path=\"/\" component={Layout} />\n                <Route component={Error} />\n            </Switch>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}